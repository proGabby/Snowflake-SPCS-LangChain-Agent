services:
  # Snowflake LangChain Agent
  snowflake-agent:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: snowflake-langchain-agent
    ports:
      - "8000:8000"
    environment:
      # Snowflake Configuration
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PASSWORD=${SNOWFLAKE_PASSWORD}
      - SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE}
      - SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA}
      - SNOWFLAKE_ROLE=${SNOWFLAKE_ROLE}
      
      # Gemini API Configuration
      - VLLM_BASE_URL=https://generativelanguage.googleapis.com/v1beta
      - VLLM_MODEL_NAME=gemini-2.5-flash
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - VLLM_TIMEOUT=30
      - VLLM_MAX_RETRIES=3
      
      # Auth Configuration
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - AUTH_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
      - ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      
      # App Configuration
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
    networks:
      - snowflake_llm_network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - snowflake_llm_network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - snowflake_llm_network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:

networks:
  snowflake_llm_network:
    driver: bridge
